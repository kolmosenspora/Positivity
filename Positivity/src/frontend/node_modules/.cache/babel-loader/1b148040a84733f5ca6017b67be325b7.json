{"ast":null,"code":"var _jsxFileName = \"/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/SkillChart.js\";\nimport React from 'react'; //\n\nimport useChartConfig from 'hooks/useChartConfig';\nimport { Chart } from '';\nlet sourceCode;\n\nconst SkillChart = () => {\n  const _useChartConfig = useChartConfig({\n    series: 8,\n    datums: 3,\n    dataType: 'ordinal'\n  }),\n        data = _useChartConfig.data,\n        randomizeData = _useChartConfig.randomizeData;\n\n  const series = React.useMemo(() => ({\n    type: 'bar'\n  }), []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: 'ordinal',\n    position: 'bottom'\n  }, {\n    position: 'left',\n    type: 'linear',\n    stacked: false\n  }], []);\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: randomizeData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Randomize Data\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Chart, {\n    data: data,\n    series: series,\n    axes: axes,\n    tooltip: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, sourceCode)));\n};\n\nexport default SkillChart;","map":{"version":3,"sources":["/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/SkillChart.js"],"names":["React","useChartConfig","Chart","sourceCode","SkillChart","series","datums","dataType","data","randomizeData","useMemo","type","axes","primary","position","stacked"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,KAAT,QAAsB,EAAtB;AACA,IAAIC,UAAJ;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA,0BACWH,cAAc,CAAC;AAC3CI,IAAAA,MAAM,EAAE,CADmC;AAE3CC,IAAAA,MAAM,EAAE,CAFmC;AAG3CC,IAAAA,QAAQ,EAAE;AAHiC,GAAD,CADzB;AAAA,QACbC,IADa,mBACbA,IADa;AAAA,QACPC,aADO,mBACPA,aADO;;AAMrB,QAAMJ,MAAM,GAAGL,KAAK,CAACU,OAAN,CACX,OAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP,CADW,EAIX,EAJW,CAAf;AAMA,QAAMC,IAAI,GAAGZ,KAAK,CAACU,OAAN,CACT,MAAM,CACF;AAAEG,IAAAA,OAAO,EAAE,IAAX;AAAiBF,IAAAA,IAAI,EAAE,SAAvB;AAAkCG,IAAAA,QAAQ,EAAE;AAA5C,GADE,EAEF;AAAEA,IAAAA,QAAQ,EAAE,MAAZ;AAAoBH,IAAAA,IAAI,EAAE,QAA1B;AAAoCI,IAAAA,OAAO,EAAE;AAA7C,GAFE,CADG,EAKT,EALS,CAAb;AAOA,SACI,0CACI;AAAQ,IAAA,OAAO,EAAEN,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAIQ,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,MAAM,EAAEH,MAA3B;AAAmC,IAAA,IAAI,EAAEO,IAAzC;AAA+C,IAAA,OAAO,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOT,UAAP,CADI,CANJ,CADJ;AAYH,CA/BD;;AAiCA,eAAeC,UAAf","sourcesContent":["import React from 'react'\n//\nimport useChartConfig from 'hooks/useChartConfig'\nimport { Chart } from ''\nlet sourceCode\n\nconst SkillChart = () => {\n    const { data, randomizeData } = useChartConfig({\n        series: 8,\n        datums: 3,\n        dataType: 'ordinal'\n    })\n    const series = React.useMemo(\n        () => ({\n            type: 'bar'\n        }),\n        []\n    )\n    const axes = React.useMemo(\n        () => [\n            { primary: true, type: 'ordinal', position: 'bottom' },\n            { position: 'left', type: 'linear', stacked: false }\n        ],\n        []\n    )\n    return (\n        <>\n            <button onClick={randomizeData}>Randomize Data</button>\n            <br />\n            <br />\n                <Chart data={data} series={series} axes={axes} tooltip />\n            <br />\n            <pre>\n        <code>{sourceCode}</code>\n      </pre>\n        </>\n    )\n}\n\nexport default SkillChart"]},"metadata":{},"sourceType":"module"}