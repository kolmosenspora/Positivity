{"ast":null,"code":"var _jsxFileName = \"/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/InputForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport useForm from 'react-hook-form';\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport gql from \"graphql-tag\";\n\nconst InputForm = () => {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit;\n\n  const onSubmit = data => console.log(data);\n\n  const cache = new InMemoryCache();\n  const link = new HttpLink({\n    uri: 'http://localhost:8080/v1/graphql'\n  });\n  const client = new ApolloClient({\n    cache,\n    link\n  });\n  useEffect(() => {});\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"firstName\",\n    ref: register({\n      required: true,\n      maxlength: 20\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"lastName\",\n    ref: register({\n      pattern: /^[A-Za-z]+$/i\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"age\",\n    type: \"number\",\n    ref: register({\n      min: 0,\n      max: 100\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default InputForm;","map":{"version":3,"sources":["/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/InputForm.js"],"names":["React","useEffect","useState","useForm","InMemoryCache","HttpLink","ApolloClient","gql","InputForm","register","handleSubmit","onSubmit","data","console","log","cache","link","uri","client","required","maxlength","pattern","min","max"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAGA,MAAMC,SAAS,GAAG,MAAO;AAAA,mBACcL,OAAO,EADrB;AAAA,QACbM,QADa,YACbA,QADa;AAAA,QACHC,YADG,YACHA,YADG;;AAErB,QAAMC,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB;;AAGA,QAAMG,KAAK,GAAG,IAAIX,aAAJ,EAAd;AACA,QAAMY,IAAI,GAAG,IAAIX,QAAJ,CAAa;AACtBY,IAAAA,GAAG,EAAE;AADiB,GAAb,CAAb;AAIA,QAAMC,MAAM,GAAG,IAAIZ,YAAJ,CAAiB;AAC5BS,IAAAA,KAD4B;AAE5BC,IAAAA;AAF4B,GAAjB,CAAf;AAKAf,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;AAIA,SACI;AAAM,IAAA,QAAQ,EAAES,YAAY,CAACC,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,GAAG,EAAEF,QAAQ,CAAC;AAAEU,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAEX,QAAQ,CAAC;AAAEY,MAAAA,OAAO,EAAE;AAAX,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,GAAG,EAAEZ,QAAQ,CAAC;AAAEa,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE;AAAf,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CA3BD;;AA6BA,eAAef,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport useForm from 'react-hook-form'\nimport {InMemoryCache} from \"apollo-cache-inmemory\";\nimport {HttpLink} from \"apollo-link-http\";\nimport {ApolloClient} from \"apollo-client\";\nimport gql from \"graphql-tag\";\n\n\nconst InputForm = () =>  {\n    const { register, handleSubmit } = useForm()\n    const onSubmit = data => console.log(data)\n\n\n    const cache = new InMemoryCache();\n    const link = new HttpLink({\n        uri: 'http://localhost:8080/v1/graphql'\n    });\n\n    const client = new ApolloClient({\n        cache,\n        link\n    });\n\n    useEffect(() => {\n        \n    })\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input name=\"firstName\" ref={register({ required: true, maxlength: 20 })} />\n            <input name=\"lastName\" ref={register({ pattern: /^[A-Za-z]+$/i })} />\n            <input name=\"age\" type=\"number\" ref={register({ min: 0, max: 100 })} />\n            <input type=\"submit\" />\n        </form>\n    );\n}\n\nexport default InputForm"]},"metadata":{},"sourceType":"module"}