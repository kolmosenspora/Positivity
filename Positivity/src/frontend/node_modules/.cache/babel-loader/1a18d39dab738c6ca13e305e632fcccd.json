{"ast":null,"code":"var _jsxFileName = \"/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/SkillChart.js\";\nimport React from 'react';\nimport { Chart } from 'react-charts';\n\nconst SkillChart = () => {\n  const data = React.useMemo(() => [{\n    specialLabel: 'Hello World!',\n    label: 'Series 1',\n    data: [{\n      x: 1,\n      y: 10\n    }, {\n      x: 2,\n      y: 10\n    }, {\n      x: 3,\n      y: 10\n    }]\n  }, {\n    label: 'Series 2',\n    data: [{\n      x: 1,\n      y: 10\n    }, {\n      x: 2,\n      y: 10\n    }, {\n      x: 3,\n      y: 10\n    }]\n  }, {\n    label: 'Series 3',\n    data: [{\n      x: 1,\n      y: 10\n    }, {\n      x: 2,\n      y: 10\n    }, {\n      x: 3,\n      y: 10\n    }]\n  }], []);\n  const series = React.useMemo(() => ({\n    type: 'bar'\n  }), []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: 'ordinal',\n    position: 'left'\n  }, {\n    position: 'bottom',\n    type: 'linear',\n    stacked: true\n  }], []);\n  return (// A react-chart hyper-responsively and continuusly fills the available\n    // space of its parent element automatically\n    React.createElement(\"div\", {\n      style: {\n        width: '400px',\n        height: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      data: data,\n      axes: axes,\n      series: series,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))\n  );\n};\n\nexport default SkillChart;","map":{"version":3,"sources":["/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/SkillChart.js"],"names":["React","Chart","SkillChart","data","useMemo","specialLabel","label","x","y","series","type","axes","primary","position","stacked","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,IAAI,GAAGH,KAAK,CAACI,OAAN,CACT,MAAM,CACF;AACIC,IAAAA,YAAY,EAAE,cADlB;AAEIC,IAAAA,KAAK,EAAE,UAFX;AAGIH,IAAAA,IAAI,EAAE,CAAC;AAAEI,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAD,EAAkB;AAAED,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAlB,EAAmC;AAAED,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAnC;AAHV,GADE,EAMF;AACIF,IAAAA,KAAK,EAAE,UADX;AAEIH,IAAAA,IAAI,EAAE,CAAC;AAAEI,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAD,EAAkB;AAAED,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAlB,EAAmC;AAAED,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAnC;AAFV,GANE,EAUF;AACIF,IAAAA,KAAK,EAAE,UADX;AAEIH,IAAAA,IAAI,EAAE,CAAC;AAAEI,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAD,EAAkB;AAAED,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAlB,EAAmC;AAAED,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAnC;AAFV,GAVE,CADG,EAgBT,EAhBS,CAAb;AAmBA,QAAMC,MAAM,GAAGT,KAAK,CAACI,OAAN,CACX,OAAO;AACHM,IAAAA,IAAI,EAAE;AADH,GAAP,CADW,EAIX,EAJW,CAAf;AAOA,QAAMC,IAAI,GAAGX,KAAK,CAACI,OAAN,CACT,MAAM,CACF;AAAEQ,IAAAA,OAAO,EAAE,IAAX;AAAiBF,IAAAA,IAAI,EAAE,SAAvB;AAAkCG,IAAAA,QAAQ,EAAE;AAA5C,GADE,EAEF;AAAEA,IAAAA,QAAQ,EAAE,QAAZ;AAAsBH,IAAAA,IAAI,EAAE,QAA5B;AAAsCI,IAAAA,OAAO,EAAE;AAA/C,GAFE,CADG,EAKT,EALS,CAAb;AAQD,SACK;AACA;AACA;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,OADJ;AAEHC,QAAAA,MAAM,EAAE;AAFL,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEb,IAAb;AAAmB,MAAA,IAAI,EAAEQ,IAAzB;AAA+B,MAAA,MAAM,EAAEF,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ;AAHL;AAYF,CA/CD;;AAiDA,eAAeP,UAAf","sourcesContent":["import React from 'react'\nimport { Chart } from 'react-charts'\n\nconst SkillChart = () => {\n    const data = React.useMemo(\n        () => [\n            {\n                specialLabel: 'Hello World!',\n                label: 'Series 1',\n                data: [{ x: 1, y: 10 }, { x: 2, y: 10 }, { x: 3, y: 10 }]\n            },\n            {\n                label: 'Series 2',\n                data: [{ x: 1, y: 10 }, { x: 2, y: 10 }, { x: 3, y: 10 }]\n            },\n            {\n                label: 'Series 3',\n                data: [{ x: 1, y: 10 }, { x: 2, y: 10 }, { x: 3, y: 10 }]\n            }\n        ],\n        []\n    )\n\n    const series = React.useMemo(\n        () => ({\n            type: 'bar'\n        }),\n        []\n    )\n\n    const axes = React.useMemo(\n        () => [\n            { primary: true, type: 'ordinal', position: 'left' },\n            { position: 'bottom', type: 'linear', stacked: true }\n        ],\n        []\n    )\n\n   return (\n        // A react-chart hyper-responsively and continuusly fills the available\n        // space of its parent element automatically\n        <div\n            style={{\n                width: '400px',\n                height: '300px'\n            }}\n        >\n            <Chart data={data} axes={axes} series={series}/>\n        </div>\n    )\n}\n\nexport default SkillChart"]},"metadata":{},"sourceType":"module"}