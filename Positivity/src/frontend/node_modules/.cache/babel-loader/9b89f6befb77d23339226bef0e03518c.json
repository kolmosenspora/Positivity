{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/SkillChart.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  positivitydbschema_person {\\n    name\\n    id\\n  }\\n}\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport Chart from 'react-google-charts';\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport gql from \"graphql-tag\";\n\nconst SkillChart = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        hoursData = _useState2[0],\n        setData = _useState2[1];\n\n  const cache = new InMemoryCache();\n  const link = new HttpLink({\n    uri: 'http://localhost:8080/v1/graphql'\n  });\n  const client = new ApolloClient({\n    cache,\n    link\n  });\n  useEffect(() => {\n    try {\n      client.query({\n        query: gql(_templateObject())\n      }).then(result => setData(result.data.positivitydbschema_person));\n    } catch (e) {\n      console.log(e);\n    }\n  });\n  const supaData = hoursData.map(hours => {\n    var myDict = hours;\n    console.log(myDict);\n  });\n  return React.createElement(Chart, {\n    width: '500px',\n    height: '300px',\n    chartType: \"BarChart\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: [['Dinosaur', 'Length'], ['Acrocanthosaurus (top-spined lizard)', 12.2], ['Albertosaurus (Alberta lizard)', 9.1], ['Allosaurus (other lizard)', 12.2], ['Apatosaurus (deceptive lizard)', 22.9], ['Archaeopteryx (ancient wing)', 0.9], ['Argentinosaurus (Argentina lizard)', 36.6], ['Baryonyx (heavy claws)', 9.1], ['Brachiosaurus (arm lizard)', 30.5], ['Ceratosaurus (horned lizard)', 6.1], ['Coelophysis (hollow form)', 2.7], ['Compsognathus (elegant jaw)', 0.9], ['Deinonychus (terrible claw)', 2.7], ['Diplodocus (double beam)', 27.1], ['Dromicelomimus (emu mimic)', 3.4], ['Gallimimus (fowl mimic)', 5.5], ['Mamenchisaurus (Mamenchi lizard)', 21.0], ['Megalosaurus (big lizard)', 7.9], ['Microvenator (small hunter)', 1.2], ['Ornithomimus (bird mimic)', 4.6], ['Oviraptor (egg robber)', 1.5], ['Plateosaurus (flat lizard)', 7.9], ['Sauronithoides (narrow-clawed lizard)', 2.0], ['Seismosaurus (tremor lizard)', 45.7], ['Spinosaurus (spiny lizard)', 12.2], ['Supersaurus (super lizard)', 30.5], ['Tyrannosaurus (tyrant lizard)', 15.2], ['Ultrasaurus (ultra lizard)', 30.5], ['Velociraptor (swift robber)', 1.8]],\n    options: {\n      title: 'Hours spent on',\n      width: 600,\n      height: 400,\n      bar: {\n        groupWidth: '95%'\n      },\n      legend: {\n        position: 'none'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '6'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  });\n};\n\nexport default SkillChart;","map":{"version":3,"sources":["/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/SkillChart.js"],"names":["React","useState","useEffect","Chart","InMemoryCache","HttpLink","ApolloClient","gql","SkillChart","hoursData","setData","cache","link","uri","client","query","then","result","data","positivitydbschema_person","e","console","log","supaData","map","hours","myDict","title","width","height","bar","groupWidth","legend","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chart from 'react-google-charts';\nimport {InMemoryCache} from \"apollo-cache-inmemory\";\nimport {HttpLink} from \"apollo-link-http\";\nimport {ApolloClient} from \"apollo-client\";\nimport gql from \"graphql-tag\";\n\n\nconst SkillChart = () => {\n\n    const [hoursData, setData] = useState([]);\n\n    const cache = new InMemoryCache();\n    const link = new HttpLink({\n        uri: 'http://localhost:8080/v1/graphql'\n    });\n\n    const client = new ApolloClient({\n        cache,\n        link\n    });\n\n    useEffect(() => {\n        try {\n            client\n                .query({\n                    query: gql`\n{\n  positivitydbschema_person {\n    name\n    id\n  }\n}\n    `\n                })\n                .then(result => setData(result.data.positivitydbschema_person));\n\n\n\n        } catch (e) {\n            console.log(e)\n\n        }\n    });\n\n\n    const supaData = hoursData.map(hours => {\n        var myDict = hours\n        console.log(myDict)\n    })\n\n  \n\n\n\n\n return (\n    <Chart\n        width={'500px'}\n        height={'300px'}\n        chartType=\"BarChart\"\n        loader={<div>Loading Chart</div>}\n        data={[\n            ['Dinosaur', 'Length'],\n            ['Acrocanthosaurus (top-spined lizard)', 12.2],\n            ['Albertosaurus (Alberta lizard)', 9.1],\n            ['Allosaurus (other lizard)', 12.2],\n            ['Apatosaurus (deceptive lizard)', 22.9],\n            ['Archaeopteryx (ancient wing)', 0.9],\n            ['Argentinosaurus (Argentina lizard)', 36.6],\n            ['Baryonyx (heavy claws)', 9.1],\n            ['Brachiosaurus (arm lizard)', 30.5],\n            ['Ceratosaurus (horned lizard)', 6.1],\n            ['Coelophysis (hollow form)', 2.7],\n            ['Compsognathus (elegant jaw)', 0.9],\n            ['Deinonychus (terrible claw)', 2.7],\n            ['Diplodocus (double beam)', 27.1],\n            ['Dromicelomimus (emu mimic)', 3.4],\n            ['Gallimimus (fowl mimic)', 5.5],\n            ['Mamenchisaurus (Mamenchi lizard)', 21.0],\n            ['Megalosaurus (big lizard)', 7.9],\n            ['Microvenator (small hunter)', 1.2],\n            ['Ornithomimus (bird mimic)', 4.6],\n            ['Oviraptor (egg robber)', 1.5],\n            ['Plateosaurus (flat lizard)', 7.9],\n            ['Sauronithoides (narrow-clawed lizard)', 2.0],\n            ['Seismosaurus (tremor lizard)', 45.7],\n            ['Spinosaurus (spiny lizard)', 12.2],\n            ['Supersaurus (super lizard)', 30.5],\n            ['Tyrannosaurus (tyrant lizard)', 15.2],\n            ['Ultrasaurus (ultra lizard)', 30.5],\n            ['Velociraptor (swift robber)', 1.8],\n        ]}\n        options={{\n            title: 'Hours spent on',\n            width: 600,\n            height: 400,\n            bar: { groupWidth: '95%' },\n            legend: { position: 'none' },\n        }}\n        // For tests\n        rootProps={{ 'data-testid': '6' }}\n    />\n\n    )\n\n}\n\nexport default SkillChart"]},"metadata":{},"sourceType":"module"}