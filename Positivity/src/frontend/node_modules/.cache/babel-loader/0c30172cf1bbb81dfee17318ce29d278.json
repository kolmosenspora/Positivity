{"ast":null,"code":"var _jsxFileName = \"/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/Component.js\";\nimport React from 'react';\nimport Chart from \"react-google-charts\";\n\nconst Component = () => {\n  return React.createElement(Component, {\n    initialState: {\n      dataLoadingStatus: 'loading',\n      chartData: []\n    },\n    didMount: async function (component) {\n      const response = await fetch('https://api.exchangeratesapi.io/latest?symbols=USD,GBP,CAD');\n      const json = await response.json();\n      const rateCurrencyNames = Object.keys(json.rates);\n      const rateCurrencyValues = Object.values(json.rates);\n      const chartData = [['Currency Name', 'Currency Rate']];\n\n      for (let i = 0; i < rateCurrencyNames.length; i += 1) {\n        chartData.push([rateCurrencyNames[i], rateCurrencyValues[i]]);\n      }\n\n      component.setState({\n        dataLoadingStatus: 'ready',\n        chartData: chartData\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, component => {\n    return component.state.dataLoadingStatus === 'ready' ? React.createElement(Chart, {\n      chartType: \"BarChart\",\n      data: component.state.chartData,\n      options: {\n        chartArea: {\n          width: '50%'\n        },\n        title: 'EUR Price'\n      },\n      rootProps: {\n        'data-testid': '1'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Fetching data from API\");\n  });\n};\n\nexport default Component;","map":{"version":3,"sources":["/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/Component.js"],"names":["React","Chart","Component","dataLoadingStatus","chartData","component","response","fetch","json","rateCurrencyNames","Object","keys","rates","rateCurrencyValues","values","i","length","push","setState","state","chartArea","width","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB,SACJ,oBAAC,SAAD;AACI,IAAA,YAAY,EAAE;AAAEC,MAAAA,iBAAiB,EAAE,SAArB;AAAgCC,MAAAA,SAAS,EAAE;AAA3C,KADlB;AAEI,IAAA,QAAQ,EAAE,gBAAeC,SAAf,EAA0B;AAChC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,4DADwB,CAA5B;AAGA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,YAAMC,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,CAA1B;AACA,YAAMC,kBAAkB,GAAGH,MAAM,CAACI,MAAP,CAAcN,IAAI,CAACI,KAAnB,CAA3B;AACA,YAAMR,SAAS,GAAG,CAAC,CAAC,eAAD,EAAkB,eAAlB,CAAD,CAAlB;;AACA,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,iBAAiB,CAACO,MAAtC,EAA8CD,CAAC,IAAI,CAAnD,EAAsD;AAClDX,QAAAA,SAAS,CAACa,IAAV,CAAe,CAACR,iBAAiB,CAACM,CAAD,CAAlB,EAAuBF,kBAAkB,CAACE,CAAD,CAAzC,CAAf;AACH;;AACDV,MAAAA,SAAS,CAACa,QAAV,CAAmB;AACff,QAAAA,iBAAiB,EAAE,OADJ;AAEfC,QAAAA,SAAS,EAAEA;AAFI,OAAnB;AAIH,KAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBKC,SAAS,IAAI;AACV,WAAOA,SAAS,CAACc,KAAV,CAAgBhB,iBAAhB,KAAsC,OAAtC,GACH,oBAAC,KAAD;AACI,MAAA,SAAS,EAAC,UADd;AAEI,MAAA,IAAI,EAAEE,SAAS,CAACc,KAAV,CAAgBf,SAF1B;AAGI,MAAA,OAAO,EAAE;AACLgB,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE;AADA,SADN;AAILC,QAAAA,KAAK,EAAE;AAJF,OAHb;AASI,MAAA,SAAS,EAAE;AAAE,uBAAe;AAAjB,OATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,GAaH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAbJ;AAeH,GAnCL,CADI;AAuCH,CAzCD;;AA0CA,eAAepB,SAAf","sourcesContent":["import React from 'react';\nimport Chart from \"react-google-charts\";\n\nconst Component = () => {\n\n    return (\n<Component\n    initialState={{ dataLoadingStatus: 'loading', chartData: [] }}\n    didMount={async function(component) {\n        const response = await fetch(\n            'https://api.exchangeratesapi.io/latest?symbols=USD,GBP,CAD',\n        )\n        const json = await response.json()\n        const rateCurrencyNames = Object.keys(json.rates)\n        const rateCurrencyValues = Object.values(json.rates)\n        const chartData = [['Currency Name', 'Currency Rate']]\n        for (let i = 0; i < rateCurrencyNames.length; i += 1) {\n            chartData.push([rateCurrencyNames[i], rateCurrencyValues[i]])\n        }\n        component.setState({\n            dataLoadingStatus: 'ready',\n            chartData: chartData,\n        })\n    }}\n>\n    {component => {\n        return component.state.dataLoadingStatus === 'ready' ? (\n            <Chart\n                chartType=\"BarChart\"\n                data={component.state.chartData}\n                options={{\n                    chartArea: {\n                        width: '50%',\n                    },\n                    title: 'EUR Price',\n                }}\n                rootProps={{ 'data-testid': '1' }}\n            />\n        ) : (\n            <div>Fetching data from API</div>\n        )\n    }}\n</Component>\n    )\n}\nexport default Component"]},"metadata":{},"sourceType":"module"}