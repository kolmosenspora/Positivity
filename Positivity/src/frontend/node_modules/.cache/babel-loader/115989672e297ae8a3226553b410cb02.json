{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/InputForm.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n {\\n  positivitydbschema_skill {\\n    name\\n  }\\n}\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport useForm from 'react-hook-form';\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport gql from \"graphql-tag\";\n\nconst InputForm = initialState => {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit;\n\n  const onSubmit = data => console.log(data);\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropdowndata = _useState2[0],\n        setDropDownData = _useState2[1];\n\n  const cache = new InMemoryCache();\n  const link = new HttpLink({\n    uri: 'http://localhost:8080/v1/graphql'\n  });\n  const client = new ApolloClient({\n    cache,\n    link\n  });\n  useEffect(() => {\n    try {\n      client.query({\n        query: gql(_templateObject())\n      }).then(result => setDropDownData(result.data.positivitydbschema_skill));\n    } catch (e) {\n      console.log(e);\n    }\n  });\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"firstName\",\n    ref: register({\n      required: true,\n      maxlength: 20\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, dropdowndata.map(option => React.createElement(MenuItem, {\n    style: {\n      padding: 0\n    },\n    \"data-testid\": \"menu-item\",\n    key: option,\n    value: option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, option))), React.createElement(\"input\", {\n    name: \"lastName\",\n    ref: register({\n      pattern: /^[A-Za-z]+$/i\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"age\",\n    type: \"number\",\n    ref: register({\n      min: 0,\n      max: 100\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n};\n\nexport default InputForm;","map":{"version":3,"sources":["/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/InputForm.js"],"names":["React","useEffect","useState","useForm","InMemoryCache","HttpLink","ApolloClient","gql","InputForm","initialState","register","handleSubmit","onSubmit","data","console","log","dropdowndata","setDropDownData","cache","link","uri","client","query","then","result","positivitydbschema_skill","e","required","maxlength","map","option","padding","pattern","min","max"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAGA,MAAMC,SAAS,GAAGC,YAAY,IAAK;AAAA,mBACIN,OAAO,EADX;AAAA,QACvBO,QADuB,YACvBA,QADuB;AAAA,QACbC,YADa,YACbA,YADa;;AAE/B,QAAMC,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB;;AAF+B,oBAGSX,QAAQ,EAHjB;AAAA;AAAA,QAGxBc,YAHwB;AAAA,QAGVC,eAHU;;AAM/B,QAAMC,KAAK,GAAG,IAAId,aAAJ,EAAd;AACA,QAAMe,IAAI,GAAG,IAAId,QAAJ,CAAa;AACtBe,IAAAA,GAAG,EAAE;AADiB,GAAb,CAAb;AAIA,QAAMC,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AAC5BY,IAAAA,KAD4B;AAE5BC,IAAAA;AAF4B,GAAjB,CAAf;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI;AACAoB,MAAAA,MAAM,CACDC,KADL,CACW;AACHA,QAAAA,KAAK,EAAEf,GAAF;AADF,OADX,EAUKgB,IAVL,CAUUC,MAAM,IAAIP,eAAe,CAACO,MAAM,CAACX,IAAP,CAAYY,wBAAb,CAVnC;AAaH,KAdD,CAcE,OAAOC,CAAP,EAAU;AACRZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AAEH;AACJ,GAnBQ,CAAT;AAqBA,SACI;AAAM,IAAA,QAAQ,EAAEf,YAAY,CAACC,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,GAAG,EAAEF,QAAQ,CAAC;AAAEiB,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKZ,YAAY,CAACa,GAAb,CAAiBC,MAAM,IACpB,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADX;AAEI,mBAAY,WAFhB;AAGI,IAAA,GAAG,EAAED,MAHT;AAII,IAAA,KAAK,EAAEA,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKA,MANL,CADH,CAFL,CAFJ,EAeI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAEpB,QAAQ,CAAC;AAAEsB,MAAAA,OAAO,EAAE;AAAX,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAgBI;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,GAAG,EAAEtB,QAAQ,CAAC;AAAEuB,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE;AAAf,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAiBI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CADJ;AAqBH,CA1DD;;AA4DA,eAAe1B,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport useForm from 'react-hook-form'\nimport {InMemoryCache} from \"apollo-cache-inmemory\";\nimport {HttpLink} from \"apollo-link-http\";\nimport {ApolloClient} from \"apollo-client\";\nimport gql from \"graphql-tag\";\n\n\nconst InputForm = initialState =>  {\n    const { register, handleSubmit } = useForm()\n    const onSubmit = data => console.log(data)\n    const [dropdowndata, setDropDownData] = useState();\n\n\n    const cache = new InMemoryCache();\n    const link = new HttpLink({\n        uri: 'http://localhost:8080/v1/graphql'\n    });\n\n    const client = new ApolloClient({\n        cache,\n        link\n    });\n\n    useEffect(() => {\n        try {\n            client\n                .query({\n                    query: gql`\n {\n  positivitydbschema_skill {\n    name\n  }\n}\n    `\n                })\n                .then(result => setDropDownData(result.data.positivitydbschema_skill))\n\n\n        } catch (e) {\n            console.log(e)\n\n        }\n    })\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input name=\"firstName\" ref={register({ required: true, maxlength: 20 })} />\n            <Select\n            >\n                {dropdowndata.map(option => (\n                    <MenuItem\n                        style={{ padding: 0 }}\n                        data-testid=\"menu-item\"\n                        key={option}\n                        value={option}\n                    >\n                        {option}\n                    </MenuItem>\n                ))}\n            </Select>\n            <input name=\"lastName\" ref={register({ pattern: /^[A-Za-z]+$/i })} />\n            <input name=\"age\" type=\"number\" ref={register({ min: 0, max: 100 })} />\n            <input type=\"submit\" />\n        </form>\n    );\n}\n\nexport default InputForm"]},"metadata":{},"sourceType":"module"}