{"ast":null,"code":"var _jsxFileName = \"/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/MessageList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\n\nconst Messagelist = () => {\n  /*\n      const cache = new InMemoryCache();\n      const link = new HttpLink({\n          uri: 'http://localhost:8080/'\n      });\n  \n      const client = new ApolloClient({\n          cache,\n          link\n      });\n  \n      const [data, setData] = useState([]);\n      client\n          .query({\n              query: gql`\n        query GetLaunch {\n          launch(id: 56) {\n            id\n            mission {\n              name\n            }\n          }\n        }\n      `\n          })\n          .then(result => console.log(result));\n      useEffect(() => {\n  \n      }, []);\n  \n  */\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n};\n\nexport default Messagelist;","map":{"version":3,"sources":["/Users/miko.kallio/hasuratesting/Positivity/Positivity/src/frontend/src/MessageList.js"],"names":["React","useState","useEffect","axios","useQuery","gql","ApolloClient","InMemoryCache","HttpLink","Messagelist"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAE1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADJ;AAWH,CA7CD;;AA+CA,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\n\nconst Messagelist = () => {\n\n/*\n    const cache = new InMemoryCache();\n    const link = new HttpLink({\n        uri: 'http://localhost:8080/'\n    });\n\n    const client = new ApolloClient({\n        cache,\n        link\n    });\n\n    const [data, setData] = useState([]);\n    client\n        .query({\n            query: gql`\n      query GetLaunch {\n        launch(id: 56) {\n          id\n          mission {\n            name\n          }\n        }\n      }\n    `\n        })\n        .then(result => console.log(result));\n    useEffect(() => {\n\n    }, []);\n\n*/\n\n    return (\n        <div>\n\n            <ul>\n\n                <li>\n\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Messagelist;"]},"metadata":{},"sourceType":"module"}